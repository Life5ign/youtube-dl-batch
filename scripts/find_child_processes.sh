#!/bin/bash

#list process that have a process group leader with the pid located in a file in the tmp directory.
#this file is generated by the main srcipt and contains its pid

#check for existence of file containing the group leading pid, and if it exists, assign the pid to a variable 
TMP_DIR="../tmp"
PID_FILE="${TMP_DIR}/youtube-dl-batch.sh.pid"
CHILD_PROCESS_INFO_FILE="${TMP_DIR}/$(basename -s ".sh" $0).info"
CHILD_PROCESS_FILE="${TMP_DIR}/$(basename -s ".sh" $0).pid"

if [ -e "$PID_FILE" ]; then
	GROUP_LEADER_PID=$(cat $PID_FILE | sed 's/ //g')
	echo -e "Got pid $GROUP_LEADER_PID from ${PID_FILE}\n"
fi

#use the group leader pid to find processes with this pid as their group leader, list them, and kill them
if [ -n "$GROUP_LEADER_PID" ]; then
	echo -e "Found the following processes with group leader ${GROUP_LEADER_PID}:\n"
	ps -xf -o pid,gid,pgid,rgid,tpgid -g $GROUP_LEADER_PID | tee $CHILD_PROCESS_INFO_FILE
	echo -e "\n"
	echo -e "Wrote info about these processes to ${CHILD_PROCESS_INFO_FILE}...\n"

	#get the pids for these processes and kill them
	echo -e "Writing process ids from $CHILD_PROCESS_INFO_FILE to ${CHILD_PROCESS_FILE}\n"
	#use sed to remove the header line from ps output and grab the pids in the first column for all the remaining lines
	CHILD_PIDS="$(ps -x -o pid -g "$GROUP_LEADER_PID" | sed -En -e '1! s/(^ *)([0-9]+)(.*)/\2/g p')"
	echo -e "$CHILD_PIDS" > $CHILD_PROCESS_FILE
	
else
	echo -e "There was no group leading pid in ${PID_FILE}\n"
fi

